/*
 * Clubhouse API
 *
 * Clubhouse API
 *
 * API version: 3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
import (
	"time"
)
// UpdateStories struct for UpdateStories
type UpdateStories struct {
	// The ID of the story that the stories are to be moved below.
	AfterId int64 `json:"after_id,omitempty"`
	// If the Stories should be archived or not.
	Archived bool `json:"archived,omitempty"`
	// The ID of the story that the stories are to be moved before.
	BeforeId int64 `json:"before_id,omitempty"`
	// The due date of the story.
	Deadline *time.Time `json:"deadline,omitempty"`
	// The ID of the epic the story belongs to.
	EpicId *int64 `json:"epic_id,omitempty"`
	// The numeric point estimate of the story. Can also be null, which means unestimated.
	Estimate *int64 `json:"estimate,omitempty"`
	// The UUIDs of the new followers to be added.
	FollowerIdsAdd []string `json:"follower_ids_add,omitempty"`
	// The UUIDs of the followers to be removed.
	FollowerIdsRemove []string `json:"follower_ids_remove,omitempty"`
	// The Id of the Group the Stories should belong to.
	GroupId *string `json:"group_id,omitempty"`
	// The ID of the iteration the story belongs to.
	IterationId *int64 `json:"iteration_id,omitempty"`
	// An array of labels to be added.
	LabelsAdd []CreateLabelParams `json:"labels_add,omitempty"`
	// An array of labels to be removed.
	LabelsRemove []CreateLabelParams `json:"labels_remove,omitempty"`
	MoveTo string `json:"move_to,omitempty"`
	// The UUIDs of the new owners to be added.
	OwnerIdsAdd []string `json:"owner_ids_add,omitempty"`
	// The UUIDs of the owners to be removed.
	OwnerIdsRemove []string `json:"owner_ids_remove,omitempty"`
	// The ID of the Project the Stories should belong to.
	ProjectId int64 `json:"project_id,omitempty"`
	// The ID of the member that requested the story.
	RequestedById string `json:"requested_by_id,omitempty"`
	// The unique IDs of the Stories you wish to update.
	StoryIds []int64 `json:"story_ids"`
	// The type of story (feature, bug, chore).
	StoryType string `json:"story_type,omitempty"`
	// The ID of the workflow state to put the stories in.
	WorkflowStateId int64 `json:"workflow_state_id,omitempty"`
}
